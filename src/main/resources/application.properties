
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/dvdrental
spring.datasource.username=testpg
spring.datasource.password=testpg

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Enabling H2 Console
#spring.h2.console.enabled=true
 
# Custom H2 Console URL
#spring.h2.console.path=/h2-console


#Schema will be created using schema.sql and data.sql files
#spring.jpa.hibernate.ddl-auto=none

#high-performance-java-persistence-tips
#Turn Statistics on and log SQL stmts
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#If want to see very extensive logging
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.type=trace
logging.level.org.hibernate.stat=debug

spring.jpa.hibernate.jdbc.batch_size=10
hibernate.order_inserts=true
hibernate.order_updates=true
hibernate.jdbc.batch_versioned_data=true





















#Below link is for using auditlistenere for auto created and update values.
#https://www.callicoder.com/spring-boot-jpa-hibernate-postgresql-restful-crud-api-example/

#https://www.callicoder.com/hibernate-spring-boot-jpa-one-to-many-mapping-example/

#https://vladmihalcea.com/14-high-performance-java-persistence-tips/
